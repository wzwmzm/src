builds:
  - binary: gortcd
    env:
      - CGO_ENABLED=0
    goos:
      - darwin
      - openbsd
      - windows
      - linux
    goarch:
      - amd64
      - 386
      - arm
      - arm64
    goarm:
      - 6
      - 7
  - binary: gortcd-pie
    env:
      - CGO_ENABLED=0
    goos:
      - linux
    goarch:
      - amd64
    flags:
      - "-buildmode=pie"

sign:
  artifacts: checksum

checksum:
  name_template: "{{.ProjectName}}-{{.Version }}-checksums.txt"

dockers:
  - image: gortc/gortcd
    dockerfile: release.Dockerfile
    extra_files:
      - gortcd.yml
    tag_templates:
      - "{{ .Version }}"
      - latest

nfpm:
  formats:
      - deb
  files:
    provision/gortcd.service: /etc/systemd/system/gortcd.service
  scripts:
    postinstall: "provision/postinstall.sh"
  vendor: "gortc.io"
  homepage: "https://gortc.io/"
  maintainer: "Aleksandr Razumov <ar@cydev.ru>"
  description: "TURN and STUN server in go."
  license: "BSD 3-Clause"
  name_template: "{{.ProjectName}}-{{.Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"
  empty_folders:
    - /etc/gortcd/
  config_files:
    gortcd.yml: /etc/gortcd/gortcd.yml

archive:
  format: tar.gz
  format_overrides:
    - goos: windows
      format: zip
  name_template: "{{.Binary}}-{{.Version}}-{{.Os}}-{{.Arch}}{{ if .Arm }}v{{ .Arm }}{{ end }}"
  files:
    - README.md
    - LICENSE
    - gortcd.yml

# .goreleaser.yml
snapcraft:
  # You can change the name of the package.
  # Default: `{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}`
  name_template: "{{.ProjectName}}-{{.Version }}-{{ .Os }}-{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

  # The name of the snap. This is optional.
  # Default is project name.
  name: gortcd

  # Single-line elevator pitch for your amazing snap.
  # 79 char long at most.
  summary: TURN and STUN server in go

  # This the description of your snap. You have a paragraph or two to tell the
  # most important story about your snap. Keep it under 100 words though,
  # we live in tweetspace and your description wants to look good in the snap
  # store.
  description: |
    The work-in-progress TURN and STUN server in go from gortc project.

  # A guardrail to prevent you from releasing a snap to all your users before
  # it is ready.
  # `devel` will let you release only to the `edge` and `beta` channels in the
  # store. `stable` will let you release also to the `candidate` and `stable`
  # channels. More info about channels here:
  # https://snapcraft.io/docs/reference/channels
  grade: devel

  # Snaps can be setup to follow three different confinement policies:
  # `strict`, `devmode` and `classic`. A strict confinement where the snap
  # can only read and write in its own namespace is recommended. Extra
  # permissions for strict snaps can be declared as `plugs` for the app, which
  # are explained later. More info about confinement here:
  # https://snapcraft.io/docs/reference/confinement
  confinement: strict

  # Each binary built by GoReleaser is an app inside the snap. In this section
  # you can declare extra details for those binaries. It is optional.
  apps:

    # The name of the app must be the same name as the binary built or the snapcraft name.
    gortcd:

      # If your app requires extra permissions to work outside of its default
      # confined space, declare them here.
      # You can read the documentation about the available plugs and the
      # things they allow:
      # https://snapcraft.io/docs/reference/interfaces.
      plugs: ["network", "network-observe", "network-bind"]

      # If you want your app to be autostarted and to always run in the
      # background, you can make it a simple daemon.
      daemon: simple

release:
  draft: true
